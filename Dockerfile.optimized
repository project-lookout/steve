# Multi-stage build for Steve OCPP Server
FROM eclipse-temurin:21-jdk AS builder

# Set working directory
WORKDIR /app

# Copy Maven wrapper and pom.xml first for better caching
COPY mvnw ./
COPY .mvn .mvn
COPY pom.xml ./

# Download dependencies (this layer will be cached if pom.xml doesn't change)
RUN ./mvnw dependency:go-offline -B

# Copy source code
COPY src ./src
COPY website ./website

# Build the application
RUN ./mvnw clean package -Pkubernetes -Djdk.tls.client.protocols="TLSv1,TLSv1.1,TLSv1.2" -DskipTests

# Runtime stage
FROM eclipse-temurin:21-jre-alpine

# Install dockerize for waiting on database
ENV DOCKERIZE_VERSION v0.19.0
RUN apk add --no-cache curl && \
    curl -sfL https://github.com/powerman/dockerize/releases/download/"$DOCKERIZE_VERSION"/dockerize-`uname -s`-`uname -m` | install /dev/stdin /usr/local/bin/dockerize && \
    apk del curl

# Create non-root user
RUN addgroup -g 1001 -S steve && \
    adduser -u 1001 -S steve -G steve

# Set working directory
WORKDIR /app

# Copy the built application from builder stage
COPY --from=builder /app/target/steve.war ./steve.war

# Change ownership to non-root user
RUN chown -R steve:steve /app

# Switch to non-root user
USER steve

# Expose ports
EXPOSE 8180 8443

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8180/steve/manager/signin || exit 1

# Wait for database and start application
CMD dockerize -wait tcp://${DB_HOST:-mariadb}:${DB_PORT:-3306} -timeout 60s && \
    java -XX:MaxRAMPercentage=85 -jar steve.war
